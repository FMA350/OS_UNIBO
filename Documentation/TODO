
Message passing:
    SYSCALL 0 caso errore
    2) nella receive, se l'argomento e' null, non salviamo il payload	--> DONE: TODO: check
    3) SEND e RECEIVE non devono essere accessibili ai thread in usermode.	--> DONE: TODO: check

ssi
    1) creazione thread tcb_t ssi e inizializzazione
    2) Meccanismi di temporizzazione
        waitforclock
        distinguere l'interrupt dello pseudoclock e quello dell'intervaltimer
    3) Aggiungere le funzioni mancanti alla ssi (vedi specifiche fase2)
terminazione processi
    1) Rimozione dei processi in attesa di messaggi dal processo terminato
    2) (?) aggiungere una coda tcb_t per thread di thread in attesa di messaggi.


managers:
    1)SYSMGR
    2)PGMMGR
    andranno entrambi ad interrupt abilitati in kernel mode.

scheduler
    Decidere se tenere parte della logica dello scheduler nei gestori di
    system call, interrupt ecc...
    Gestione contabilita' con TOD.
    pseudoclock con TOD

ERROR_HANDLING
    Decidere i codici di errore
    Il tcb_t deve contenere l'errnum del thread ed anche una lista dei processi
    in attesa di messaggi da parte del thread per facilitare il corretto rilascio
    delle risorse durante la terminazione


//SETSYSMGR

//SETPGMMGR

//TERMINATE_THREAD


DOMANDE

1) Thread appartenenti allo stesso processo possono avere manager differenti?

2) In che relazione pertanto l'ereditarieta' influisce sulla inizializzazione
di un manager per un nuovo processo.

3) BUS_REG_TIME_SCALE varia nel tempo? Domanda in relazione alla contabilita'
dei millisecondi.

4) I manager vengono settati dai programmi? Piu' thread possono avere lo stesso manager?
